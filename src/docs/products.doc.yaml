openapi: 3.0.0 
info:
  title: API de Productos
  version: 1.0.0
  description: API para la gestión de productos en el sistema.
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID único del producto en la base de datos.
        name:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descripción detallada del producto.
        price:
          type: number
          format: float
          description: Precio del producto.
        stock:
          type: integer
          description: Cantidad de productos en stock.
        category:
          type: string
          description: Categoría del producto.
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del producto.
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del producto.
      example:
        _id: 5e7d2f7f4f1a2c001f9c4b89
        name: "Producto Ejemplo"
        description: "Descripción del producto."
        price: 19.99
        stock: 50
        category: "Electrónica"
        createdAt: "2024-12-20T10:00:00.000Z"
        updatedAt: "2024-12-20T14:00:00.000Z"
paths:
  /api/products:
    get:
      summary: Obtiene una lista de todos los productos.
      tags:
        - Products
      responses:
        200:
          description: Lista de productos obtenida correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hubo un error al obtener los productos"
                  details:
                    type: string
                    example: "Detalles del error"

  /api/products/{productId}:
    get:
      summary: Obtiene un producto por su ID.
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: ID del producto.
      responses:
        200:
          description: Producto obtenido correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Producto no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto no encontrado"
        500:
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hubo un error al obtener el producto"
                  details:
                    type: string
                    example: "Detalles del error"

    put:
      summary: Actualiza un producto existente.
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: ID del producto.
      requestBody:
        description: Información actualizada del producto.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Producto actualizado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Producto no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto no encontrado"
        400:
          description: Datos inválidos o faltantes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Datos inválidos"
        500:
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hubo un error al actualizar el producto"
                  details:
                    type: string
                    example: "Detalles del error"

    delete:
      summary: Elimina un producto existente.
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: ID del producto.
      responses:
        200:
          description: Producto eliminado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto eliminado"
        404:
          description: Producto no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Producto no encontrado"
        500:
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hubo un error al eliminar el producto"
                  details:
                    type: string
                    example: "Detalles del error"
